在可計算性理論，如果一系列運算元據的規則（如指令集、程式語言、細胞自動機）可以用來類比任何圖靈機，那麼它是圖靈完備的。這意味著這個系統也可以辨識其他資料處理規則集，圖靈完備性被用作表達這種資料處理規則集的一種屬性。如今，幾乎所有程式語言都是具有圖靈完備性的。這個詞以引入圖靈機概念的數學家艾倫·圖靈命名。
還有一個相關概念是圖靈等價 – 如果P可以類比Q並且Q可以類比P，則兩台電腦P和Q稱為等效電腦。 邱奇－圖靈論題認為任可以通過演算法計算其值的函式都可以由圖靈機計算，因此，如果任何真實世界的電腦都可以類比圖靈機，則其對圖靈機是圖靈等價的。 通用圖靈機可用於類比任何圖靈機，且可以擴充現實世界電腦的計算方面。[NB 1]
如果某物是圖靈完備的，則它可以用於類比某些圖靈完備的系統。例如，一個指令式編程具有條件表達式（例如，「 if」和「 goto」語句，或者「branch if zero」的指令；請參見單一指令電腦）並且具有更改任意指令的能力，則他為圖靈完備的。當然，任何物理系統都不可能擁有無限的記憶體。但如果忽略了有限記憶體的限制，則大多數程式語言都將是圖靈完備的。
在口語用法中，術語「圖靈完備性」或「圖靈等價」用於表示任何現實世界通用電腦或電腦語言都可以近似類比任何其他現實世界通用電腦的計算方面、用途的電腦或電腦語言。
到目前為止構建的現實電腦可以在功能上進行分析，就像單帶圖靈機（對應於它們的記憶體的「帶」）一樣； 因此，相關的數學問題可以通過足夠抽象的運算來應用。但是，現實電腦的物理資源有限，因此它們僅是線性有界自動機。與之對應的，通用電腦被定義為具有圖靈完備的指令集，無限記憶體和無限可用時間的裝置。
在計算理論中，有幾個密切相關的術語用於描述系統的計算能力。（比如抽象機器或者程式語言。）
具有預言磁帶的電腦可能比圖靈機更強大：例如，磁帶可能包含停機問題或其他一些圖靈不可計算問題的解決方案。甚至具有隨機預言機也是不可計算的（幾乎必然），因為只有可數的計算而無數的預言。 因此，具有隨機預言機的電腦可以計算出圖靈機無法執行的操作。
所有已知的物理定律都具有可通過數字電腦上的一系列近似值計算的結果。 一種稱為數字物理學的假設指出，這並非偶然，因為宇宙本身可以在通用圖靈機上計算。 這意味著無法在物理上構建比通用圖靈機更強大的電腦。
存在很多並不圖靈完備的語言，比如由正規表示式表示的正規語言，通過有限狀態機進行辨識。下推自動機和上下文無關文法更強大，但仍不是圖靈完備的，他們一般用於在程式編譯的初期階段生成分析樹。其他範例包括嵌入在Direct3D和OpenGL副檔名中的像素著色器語言的某些早期版本。[來源請求]
在如Charity和Epigram之類的總函式語言程式設計語言中，所有功能都是總的，必須終止。 Charity使用型別系統和基於範疇論的控制流程，而Epigram使用依值型別。  LOOP語言的設計使其僅計算原始遞迴函式。 所有這些都計算總可計算函式的正確子集，因為總的總可計算函式集不可計算。 同樣，由於這些語言的所有功能都是合計的，因此與圖靈機相比，用於遞迴可列舉集合的演算法無法用這些語言編寫。
儘管無類型λ演算是圖靈完備的，但簡單類型λ演算不是。
XML，HTML，JSON，和YAML不符合圖靈完備性，因為他們通常用來表示結構化資料而不描述計算。這些語言有時被稱為標記式語言，或更恰當地稱為「容器語言」或「資料描述語言」。
